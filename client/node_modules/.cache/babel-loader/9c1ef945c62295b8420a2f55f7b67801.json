{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL } from '../constants/orderConstants';\nimport axios from 'axios';\nimport { logout } from './userActions';\nexport const createOrder = order => async (dispatch, getState) => {\n  //getState: has token.\n  console.log('create order before try');\n\n  try {\n    console.log('TRYYYYYY');\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log('DATAAAAA');\n    const {\n      data\n    } = await axios.post('/api/orders', order, config);\n    console.log('before success');\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/FullStack/mern-shop/client/src/actions/orderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","axios","logout","createOrder","order","dispatch","getState","console","log","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","message","response"],"mappings":"AAAA,SAAQA,oBAAR,EACIC,oBADJ,EAEIC,iBAFJ,QAGW,6BAHX;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC5D;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AACA,MAAI;AACFD,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAIA,UAAM;AAACY,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAZ,QAA6BL,QAAQ,EAA3C;AAEA,UAAMM,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AADjC;AADI,KAAf;AAKAR,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAACgB,IAAN,CAAW,aAAX,EAAyBb,KAAzB,EAAgCQ,MAAhC,CAAvB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAEV,oBADC;AAEPmB,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GApBD,CAoBE,OAAOG,KAAP,EAAc;AACd,UAAMC,OAAO,GACXD,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OAAtC,GACID,KAAK,CAACE,QAAN,CAAeL,IAAf,CAAoBI,OADxB,GAEID,KAAK,CAACC,OAHZ;;AAIA,QAAIA,OAAO,KAAK,8BAAhB,EAAgD;AAC9Cf,MAAAA,QAAQ,CAACH,MAAM,EAAP,CAAR;AACD;;AACDG,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAET,iBADC;AAEPkB,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;AACR,CApCM","sourcesContent":["import {ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL\r\n    } from '../constants/orderConstants'\r\nimport axios from 'axios'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n        //getState: has token.\r\n        console.log('create order before try')\r\n        try {\r\n          console.log('TRYYYYYY')\r\n          dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n          })\r\n      \r\n          const {userLogin: { userInfo },} = getState()\r\n          \r\n          const config = {\r\n            headers: {\r\n              Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n          }\r\n          console.log('DATAAAAA')\r\n          const { data } = await axios.post('/api/orders',order, config)\r\n          console.log('before success')\r\n          dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n          })\r\n        } catch (error) {\r\n          const message =\r\n            error.response && error.response.data.message\r\n              ? error.response.data.message\r\n              : error.message\r\n          if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n          }\r\n          dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: message,\r\n          })\r\n        }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}