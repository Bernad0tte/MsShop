{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Masoud\\\\Desktop\\\\FullStack\\\\mern-shop\\\\client\\\\src\\\\pages\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport React, {\n/*useState*/\nuseEffect } from 'react';\nimport Loader from './components/Loader';\nimport Message from './components/Message';\nimport { useDispatch, useSelector } from 'react-redux'; // whole state is a big cloud, and to show a state from the \"Whole state\" we use a useSelector.before that, we have productList(piece of state) fetched, but couldn't show them in homepage.\n\nimport { Row, Col } from 'react-bootstrap'; //import products  from '../products'\n//At first, we fetch data from client folder, but after set backand, we want to request it from api. \n\nimport Product from '../components/Product'; //At fist, I fetched data from api, with axios here. but then, using redux productAction to do this.\n\nimport { listProducts } from '../actions/productActions';\nimport { load } from 'dotenv'; //import axios from 'axios'\n//We have global level and component level states in react. products is a global level and we work with that in redux, but here temporarily we see it as a component level state. \n//Forms and menues are component level state, but things like products, users , cart are global state redux. \n//Later, we make request with action creator in redux, but now, we do it directly.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HomePage = () => {\n  _s();\n\n  const dispatch = useDispatch(); //***const [products, setPorducts] = useState([])\n  //with class based components, we define state in constructor, but in functions we don't have constructor so we use usestate hook. \n  //!!! dispatch: fireing off and sending through reducer down to the state, useSelector: grab it(that piece of state from reducer) from state.\n\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    error,\n    products\n  } = productList; //what we put in useEffect, runs as soon as the component(Here Homepage) loads. we want products to load as soon as homepage loads. \n\n  useEffect(() => {\n    dispatch(listProducts()); //**1st fetched data here, Now redux productAction, do that. */\n    // const fetchProducts = async ()=>{\n    //     const {data} = await axios.get('/api/products')\n    //     //we access to {data} from res.\n    //     //For getting response, we set a proxy in package.json\n    //     setPorducts(data) \n    // }\n    // fetchProducts()\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"List of Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 44\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 12,\n        md: 6,\n        lg: 4,\n        xl: 3,\n        children: /*#__PURE__*/_jsxDEV(Product, {\n          product: product\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }, this)\n      }, product._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(HomePage, \"+Kfo5mv+5h4frBKGytIisQkXo2Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/FullStack/mern-shop/client/src/pages/HomePage.js"],"names":["React","useEffect","Loader","Message","useDispatch","useSelector","Row","Col","Product","listProducts","load","HomePage","dispatch","productList","state","loading","error","products","map","product","_id"],"mappings":";;;AAAA,OAAOA,KAAP;AAAgB;AAAaC,SAA7B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC,C,CACA;;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,iBAAvB,C,CAEA;AACA;;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CAEA;;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,SAASC,IAAT,QAAqB,QAArB,C,CACA;AAEA;AACA;AACA;;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE1B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAF0B,CAG1B;AACA;AACA;;AACA,QAAMS,WAAW,GAAGR,WAAW,CAAES,KAAK,IAAIA,KAAK,CAACD,WAAjB,CAA/B;AACA,QAAM;AAACE,IAAAA,OAAD;AAASC,IAAAA,KAAT;AAAeC,IAAAA;AAAf,MAA2BJ,WAAjC,CAP0B,CAS1B;;AACAZ,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,QAAQ,CAACH,YAAY,EAAb,CAAR,CADU,CAEV;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEH,GAZQ,EAYP,CAACG,QAAD,CAZO,CAAT;AAgBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKG,OAAO,gBAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAeC,KAAK,gBAAG,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC,QAAjB;AAAA,gBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAH,gBACxB,QAAC,GAAD;AAAA,gBACKC,QAAQ,CAACC,GAAT,CAAcC,OAAO,iBACd,QAAC,GAAD;AAAuB,QAAA,EAAE,EAAE,EAA3B;AAA+B,QAAA,EAAE,EAAE,CAAnC;AAAsC,QAAA,EAAE,EAAE,CAA1C;AAA6C,QAAA,EAAE,EAAE,CAAjD;AAAA,+BACI,QAAC,OAAD;AAAS,UAAA,OAAO,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ,SAAUA,OAAO,CAACC,GAAlB;AAAA;AAAA;AAAA;AAAA,cADP;AADL;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA,kBADJ;AAkBH,CA5CM;;GAAMT,Q;UAEQP,W,EAIGC,W;;;KANXM,Q","sourcesContent":["import React , {/*useState*/ useEffect} from 'react'\r\nimport Loader from './components/Loader'\r\nimport Message from './components/Message'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n// whole state is a big cloud, and to show a state from the \"Whole state\" we use a useSelector.before that, we have productList(piece of state) fetched, but couldn't show them in homepage.\r\nimport {Row, Col} from 'react-bootstrap'\r\n\r\n//import products  from '../products'\r\n//At first, we fetch data from client folder, but after set backand, we want to request it from api. \r\nimport Product from '../components/Product'\r\n\r\n//At fist, I fetched data from api, with axios here. but then, using redux productAction to do this.\r\nimport {listProducts} from '../actions/productActions'\r\nimport { load } from 'dotenv'\r\n//import axios from 'axios'\r\n\r\n//We have global level and component level states in react. products is a global level and we work with that in redux, but here temporarily we see it as a component level state. \r\n//Forms and menues are component level state, but things like products, users , cart are global state redux. \r\n//Later, we make request with action creator in redux, but now, we do it directly.\r\n\r\nexport const HomePage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    //***const [products, setPorducts] = useState([])\r\n    //with class based components, we define state in constructor, but in functions we don't have constructor so we use usestate hook. \r\n    //!!! dispatch: fireing off and sending through reducer down to the state, useSelector: grab it(that piece of state from reducer) from state.\r\n    const productList = useSelector( state => state.productList)\r\n    const {loading,error,products} = productList \r\n\r\n    //what we put in useEffect, runs as soon as the component(Here Homepage) loads. we want products to load as soon as homepage loads. \r\n    useEffect(()=>{\r\n        dispatch(listProducts())\r\n        //**1st fetched data here, Now redux productAction, do that. */\r\n        // const fetchProducts = async ()=>{\r\n        //     const {data} = await axios.get('/api/products')\r\n        //     //we access to {data} from res.\r\n        //     //For getting response, we set a proxy in package.json\r\n        //     setPorducts(data) \r\n        // }\r\n        \r\n        // fetchProducts()\r\n\r\n    },[dispatch])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>List of Products</h1>\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> :\r\n                <Row>\r\n                    {products.map( product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3} >\r\n                                <Product product={product} />\r\n                            </Col>         \r\n                    ))}\r\n\r\n             \r\n                </Row>\r\n            }\r\n            \r\n            \r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}