{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_SUCCESS, USER_DETAILS_REQUEST, USER_DETAILS_FAIL } from '../constants/userConstants';\nimport axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content_Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};\nexport const getUserDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content_Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    }); //Right after successfully registration, login user.\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content_Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    }); //Right after successfully registration, login user.\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/FullStack/mern-shop/client/src/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_FAIL","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","getUserDetails","id","name","register"],"mappings":"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","sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_FAIL\r\n\r\n}from '../constants/userConstants'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email,password) => async(dispatch)=>{\r\n    try{\r\n        dispatch({type: USER_LOGIN_REQUEST})\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content_Type':'application/json'\r\n            }    \r\n        }\r\n        \r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { email, password },\r\n            config\r\n          )\r\n    \r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        \r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const logout = () => async(dispatch)=>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({type : USER_LOGOUT})\r\n}\r\n\r\n\r\nexport const getUserDetails = (id)=> async(dispatch) => {\r\n    try{\r\n        dispatch({type: USER_REGISTER_REQUEST})\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content_Type':'application/json'\r\n            }    \r\n        }\r\n        \r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name,email, password },\r\n            config\r\n          )\r\n    \r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        //Right after successfully registration, login user.\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        \r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const register = (name,email,password)=> async(dispatch) => {\r\n    try{\r\n        dispatch({type: USER_REGISTER_REQUEST})\r\n\r\n        const config = {\r\n            headers:{\r\n                'Content_Type':'application/json'\r\n            }    \r\n        }\r\n        \r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name,email, password },\r\n            config\r\n          )\r\n    \r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        //Right after successfully registration, login user.\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n        localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n    }catch(error){\r\n        \r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}