{"ast":null,"code":"import React,{/*useState*/useEffect}from'react';import{Link}from'react-router-dom';import Loader from'../components/Loader';import Message from'../components/Message';import{useDispatch,useSelector}from'react-redux';// whole state is a big cloud, and to show a state from the \"Whole state\" we use a useSelector.before that, we have productList(piece of state) fetched, but couldn't show them in homepage.\nimport{Row,Col}from'react-bootstrap';import{Helmet}from'react-helmet';//import products  from '../products'\n//At first, we fetch data from client folder, but after set backand, we want to request it from api. \nimport Product from'../components/Product';import Paginate from'../components/Paginate';import ProductCarousel from'../components/ProductCarousel';import Meta from'../components/Meta';//At fist, I fetched data from api, with axios here. but then, using redux productAction to do this.\nimport{listProducts}from'../actions/productActions';//import axios from 'axios'\n//We have global level and component level states in react. products is a global level and we work with that in redux, but here temporarily we see it as a component level state. \n//Forms and menues are component level state, but things like products, users , cart are global state redux. \n//Later, we make request with action creator in redux, but now, we do it directly.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var HomePage=function HomePage(_ref){var match=_ref.match;var keyword=match.params.keyword;var pageNumber=match.params.pageNumber||1;var dispatch=useDispatch();//***const [products, setPorducts] = useState([])\n//with class based components, we define state in constructor, but in functions we don't have constructor so we use usestate hook. \n//!!! dispatch: fireing off and sending through reducer down to the state, useSelector: grab it(that piece of state from reducer) from state.\nvar productList=useSelector(function(state){return state.productList;});var loading=productList.loading,error=productList.error,products=productList.products,pages=productList.pages,page=productList.page;//what we put in useEffect, runs as soon as the component(Here Homepage) loads. we want products to load as soon as homepage loads. \nuseEffect(function(){dispatch(listProducts(keyword,pageNumber));//**1st fetched data here, Now redux productAction, do that. */\n// const fetchProducts = async ()=>{\n//     const {data} = await axios.get('/api/products')\n//     //we access to {data} from res.\n//     //For getting response, we set a proxy in package.json\n//     setPorducts(data) \n// }\n// fetchProducts()\n},[dispatch,keyword,pageNumber]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Meta,{}),!keyword?/*#__PURE__*/_jsx(ProductCarousel,{}):/*#__PURE__*/_jsx(Link,{to:\"/\",className:\"btn btn-light\",children:\"Go Back\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"Latest Products\"}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Row,{children:products.map(function(product){return/*#__PURE__*/_jsx(Col,{sm:12,md:6,lg:4,xl:3,children:/*#__PURE__*/_jsx(Product,{product:product})},product._id);})}),/*#__PURE__*/_jsx(Paginate,{pages:pages,page:page,keyword:keyword?keyword:''})]})]});};","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/ReactEx/FullStack/mern-shop/client/src/pages/HomePage.js"],"names":["React","useEffect","Link","Loader","Message","useDispatch","useSelector","Row","Col","Helmet","Product","Paginate","ProductCarousel","Meta","listProducts","HomePage","match","keyword","params","pageNumber","dispatch","productList","state","loading","error","products","pages","page","map","product","_id"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgB,YAAaC,SAA7B,KAA6C,OAA7C,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA;AACA,OAAQC,GAAR,CAAaC,GAAb,KAAuB,iBAAvB,CACA,OAAQC,MAAR,KAAqB,cAArB,CAGA;AACA;AACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,+BAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CAEA;AACA,OAAQC,YAAR,KAA2B,2BAA3B,CAEA;AAEA;AACA;AACA;6IAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAa,IAAXC,CAAAA,KAAW,MAAXA,KAAW,CAEjC,GAAMC,CAAAA,OAAO,CAAGD,KAAK,CAACE,MAAN,CAAaD,OAA7B,CACA,GAAME,CAAAA,UAAU,CAAEH,KAAK,CAACE,MAAN,CAAaC,UAAb,EAA2B,CAA7C,CAEA,GAAMC,CAAAA,QAAQ,CAAGf,WAAW,EAA5B,CACA;AACA;AACA;AACA,GAAMgB,CAAAA,WAAW,CAAGf,WAAW,CAAE,SAAAgB,KAAK,QAAIA,CAAAA,KAAK,CAACD,WAAV,EAAP,CAA/B,CACA,GAAOE,CAAAA,OAAP,CAAiDF,WAAjD,CAAOE,OAAP,CAAeC,KAAf,CAAiDH,WAAjD,CAAeG,KAAf,CAAqBC,QAArB,CAAiDJ,WAAjD,CAAqBI,QAArB,CAAgCC,KAAhC,CAAiDL,WAAjD,CAAgCK,KAAhC,CAAwCC,IAAxC,CAAiDN,WAAjD,CAAwCM,IAAxC,CAEA;AACA1B,SAAS,CAAC,UAAI,CACVmB,QAAQ,CAACN,YAAY,CAACG,OAAD,CAASE,UAAT,CAAb,CAAR,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEH,CAZQ,CAYP,CAACC,QAAD,CAAUH,OAAV,CAAkBE,UAAlB,CAZO,CAAT,CAgBA,mBACI,wCACA,KAAC,IAAD,IADA,CAEK,CAACF,OAAD,cACC,KAAC,eAAD,IADD,cAGC,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,CAAa,SAAS,CAAC,eAAvB,qBALN,cASI,uCATJ,CAUKM,OAAO,cACN,KAAC,MAAD,IADM,CAEJC,KAAK,cACP,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,UAA2BA,KAA3B,EADO,cAGP,wCACE,KAAC,GAAD,WACGC,QAAQ,CAACG,GAAT,CAAa,SAACC,OAAD,qBACZ,KAAC,GAAD,EAAuB,EAAE,CAAE,EAA3B,CAA+B,EAAE,CAAE,CAAnC,CAAsC,EAAE,CAAE,CAA1C,CAA6C,EAAE,CAAE,CAAjD,uBACE,KAAC,OAAD,EAAS,OAAO,CAAEA,OAAlB,EADF,EAAUA,OAAO,CAACC,GAAlB,CADY,EAAb,CADH,EADF,cAQE,KAAC,QAAD,EACE,KAAK,CAAEJ,KADT,CAEE,IAAI,CAAEC,IAFR,CAGE,OAAO,CAAEV,OAAO,CAAGA,OAAH,CAAa,EAH/B,EARF,GAfN,GADJ,CAkCH,CA/DM","sourcesContent":["import React , {/*useState*/ useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n// whole state is a big cloud, and to show a state from the \"Whole state\" we use a useSelector.before that, we have productList(piece of state) fetched, but couldn't show them in homepage.\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {Helmet} from 'react-helmet'\r\n\r\n\r\n//import products  from '../products'\r\n//At first, we fetch data from client folder, but after set backand, we want to request it from api. \r\nimport Product from '../components/Product'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\n\r\n//At fist, I fetched data from api, with axios here. but then, using redux productAction to do this.\r\nimport {listProducts} from '../actions/productActions'\r\n\r\n//import axios from 'axios'\r\n\r\n//We have global level and component level states in react. products is a global level and we work with that in redux, but here temporarily we see it as a component level state. \r\n//Forms and menues are component level state, but things like products, users , cart are global state redux. \r\n//Later, we make request with action creator in redux, but now, we do it directly.\r\n\r\nexport const HomePage = ({match}) => {\r\n\r\n    const keyword = match.params.keyword\r\n    const pageNumber= match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n    //***const [products, setPorducts] = useState([])\r\n    //with class based components, we define state in constructor, but in functions we don't have constructor so we use usestate hook. \r\n    //!!! dispatch: fireing off and sending through reducer down to the state, useSelector: grab it(that piece of state from reducer) from state.\r\n    const productList = useSelector( state => state.productList)\r\n    const {loading,error,products , pages , page } = productList \r\n\r\n    //what we put in useEffect, runs as soon as the component(Here Homepage) loads. we want products to load as soon as homepage loads. \r\n    useEffect(()=>{\r\n        dispatch(listProducts(keyword,pageNumber))\r\n        //**1st fetched data here, Now redux productAction, do that. */\r\n        // const fetchProducts = async ()=>{\r\n        //     const {data} = await axios.get('/api/products')\r\n        //     //we access to {data} from res.\r\n        //     //For getting response, we set a proxy in package.json\r\n        //     setPorducts(data) \r\n        // }\r\n        \r\n        // fetchProducts()\r\n\r\n    },[dispatch,keyword,pageNumber])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Meta />\r\n            {!keyword ? (\r\n              <ProductCarousel />\r\n            ) : (\r\n              <Link to='/' className='btn btn-light'>\r\n                Go Back\r\n              </Link>\r\n            )}\r\n            <h1>Latest Products</h1>\r\n            {loading ? (\r\n              <Loader />\r\n            ) : error ? (\r\n              <Message variant='danger'>{error}</Message>\r\n            ) : (\r\n              <>\r\n                <Row>\r\n                  {products.map((product) => (\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                      <Product product={product} />\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n                <Paginate\r\n                  pages={pages}\r\n                  page={page}\r\n                  keyword={keyword ? keyword : ''}\r\n                />\r\n              </>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}