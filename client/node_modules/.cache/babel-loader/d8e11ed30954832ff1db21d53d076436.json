{"ast":null,"code":"//1st file I created to work with redux.\n//Here, I connect all reducers and middlewares , ... \nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}; //When Store loads, we can load thing. That thing can be in initial State!\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/ReactEx/FullStack/mern-shop/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReducer","cartReducer","userDetailsReducer","userLoginReducer","userRegisterReducer","userUpdateProfileReducer","orderCreateReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,SAAQC,qBAAR,EAA+BC,kBAA/B,QAAwD,4BAAxD;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,kBAAR,EAA4BC,gBAA5B,EAA8CC,mBAA9C,EAAmEC,wBAAnE,QAAkG,yBAAlG;AACA,SAAQC,kBAAR,QAAiC,0BAAjC;AAEA,MAAMC,OAAO,GAAGZ,eAAe,CAAC;AAC5Ba,EAAAA,WAAW,EAAGR,kBADc;AAE5BS,EAAAA,cAAc,EAAEV,qBAFY;AAG5BW,EAAAA,IAAI,EAAGT,WAHqB;AAI5BU,EAAAA,SAAS,EAAER,gBAJiB;AAK5BS,EAAAA,YAAY,EAAER,mBALc;AAM5BS,EAAAA,WAAW,EAACX,kBANgB;AAO5BY,EAAAA,iBAAiB,EAACT,wBAPU;AAQ5BU,EAAAA,WAAW,EAAGT;AARc,CAAD,CAA/B;AAaA,MAAMU,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACEC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADF,GAEE,EAF/B;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACGC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADH,GAEG,IAF/B;AAIA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACJC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADI,GAEJ,EAF/B,C,CAMA;;AACA,MAAMK,YAAY,GAAG;AACjBb,EAAAA,IAAI,EAAG;AAAEc,IAAAA,SAAS,EAAGR,oBAAd;AAAqCS,IAAAA,eAAe,EAAEH;AAAtD,GADU;AAEjBX,EAAAA,SAAS,EAAG;AAACe,IAAAA,QAAQ,EAAGL;AAAZ;AAFK,CAArB;AAMA,MAAMM,UAAU,GAAG,CAAC9B,KAAD,CAAnB;AAEA,MAAM+B,KAAK,GAAGlC,WAAW,CAACa,OAAD,EAAUgB,YAAV,EAAyBzB,mBAAmB,CAACF,eAAe,CAAC,GAAG+B,UAAJ,CAAhB,CAA5C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["//1st file I created to work with redux.\r\n//Here, I connect all reducers and middlewares , ... \r\n\r\nimport  {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport {productDetailsReducer, productListReducer} from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {userDetailsReducer, userLoginReducer, userRegisterReducer, userUpdateProfileReducer} from './reducers/userReducers'\r\nimport {orderCreateReducer} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart : cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile:userUpdateProfileReducer,\r\n    orderCreate : orderCreateReducer,\r\n    \r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems')) \r\n                             : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n                             ? JSON.parse(localStorage.getItem('userInfo')) \r\n                             : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n                             ? JSON.parse(localStorage.getItem('shippingAddress')) \r\n                             : {}\r\n\r\n                             \r\n\r\n//When Store loads, we can load thing. That thing can be in initial State!\r\nconst initialState = {\r\n    cart : { cartItems : cartItemsFromStorage , shippingAddress: shippingAddressFromStorage},\r\n    userLogin : {userInfo : userInfoFromStorage},\r\n    \r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState , composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}