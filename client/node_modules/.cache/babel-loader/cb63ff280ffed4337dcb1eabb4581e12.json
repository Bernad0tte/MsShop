{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_REQUEST } from '../constants/productConstants'; //A reducer(as a function) takes two thins: first initial state, and second, an action. \n//To use this reducer, first we add it to store.js\n//@functionality: for changing the state of the productList in homePage\n\nexport const productListReducer = (state = {\n  products: []\n}, action) => {\n  //evaluating type with switch\n  //each case contains an action\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return {\n        loading: true,\n        products: []\n      };\n\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload\n      };\n\n    case PRODUCT_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const productDetailsReducer = (state = {\n  product: {\n    reviews: []\n  }\n}, action) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return {\n        loading: true,\n        ...state\n      };\n\n    case PRODUCT_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        product: action.payload\n      };\n\n    case PRODUCT_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return {\n        loading: true\n      };\n\n    case PRODUCT_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        product: action.payload\n      };\n\n    case PRODUCT_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    case PRODUCT_CREATE_RESET:\n      return {};\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/ReactEx/FullStack/mern-shop/client/src/reducers/productReducers.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_FAIL","PRODUCT_LIST_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_REQUEST","productListReducer","state","products","action","type","loading","payload","error","productDetailsReducer","product","reviews","productCreateReducer","success","PRODUCT_CREATE_RESET"],"mappings":"AAAA,SACQA,oBADR,EAEQC,iBAFR,EAGQC,oBAHR,EAIQC,oBAJR,EAKQC,uBALR,EAMQC,uBANR,EAOQC,mBAPR,EAQQC,sBARR,EASQC,sBATR,QAWS,+BAXT,C,CAYA;AACA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,QAAQ,EAAG;AAAb,CAAT,EAA0BC,MAA1B,KAAmC;AACjE;AACA;AACA,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,oBAAL;AACI,aAAO;AAACc,QAAAA,OAAO,EAAE,IAAV;AAAiBH,QAAAA,QAAQ,EAAG;AAA5B,OAAP;;AACJ,SAAKT,oBAAL;AACI,aAAO;AAACY,QAAAA,OAAO,EAAE,KAAV;AAAkBH,QAAAA,QAAQ,EAAGC,MAAM,CAACG;AAApC,OAAP;;AACJ,SAAKd,iBAAL;AACI,aAAO;AAACa,QAAAA,OAAO,EAAE,KAAV;AAAkBE,QAAAA,KAAK,EAAGJ,MAAM,CAACG;AAAjC,OAAP;;AACJ;AACI,aAAOL,KAAP;AARR;AAWH,CAdM;AAgBP,OAAO,MAAMO,qBAAqB,GAAI,CAACP,KAAK,GAAG;AAAEQ,EAAAA,OAAO,EAAG;AAAEC,IAAAA,OAAO,EAAC;AAAV;AAAZ,CAAT,EAAoCP,MAApC,KAA6C;AAE/E,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,uBAAL;AACI,aAAO;AAACU,QAAAA,OAAO,EAAE,IAAV;AAAiB,WAAGJ;AAApB,OAAP;;AACJ,SAAKL,uBAAL;AACI,aAAO;AAACS,QAAAA,OAAO,EAAE,KAAV;AAAkBI,QAAAA,OAAO,EAAGN,MAAM,CAACG;AAAnC,OAAP;;AACJ,SAAKZ,oBAAL;AACI,aAAO;AAACW,QAAAA,OAAO,EAAE,KAAV;AAAkBE,QAAAA,KAAK,EAAGJ,MAAM,CAACG;AAAjC,OAAP;;AACJ;AACI,aAAOL,KAAP;AARR;AAWH,CAbM;AAgBP,OAAO,MAAMU,oBAAoB,GAAG,CAACV,KAAK,GAAG,EAAT,EAAaE,MAAb,KAAwB;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,sBAAL;AACE,aAAO;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAAP;;AACF,SAAKP,sBAAL;AACE,aAAO;AAAEO,QAAAA,OAAO,EAAE,KAAX;AAAkBO,QAAAA,OAAO,EAAE,IAA3B;AAAiCH,QAAAA,OAAO,EAAEN,MAAM,CAACG;AAAjD,OAAP;;AACF,SAAKT,mBAAL;AACE,aAAO;AAAEQ,QAAAA,OAAO,EAAE,KAAX;AAAkBE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAAhC,OAAP;;AACF,SAAKO,oBAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOZ,KAAP;AAVJ;AAYD,CAbI","sourcesContent":["import { \r\n        PRODUCT_LIST_REQUEST,\r\n        PRODUCT_LIST_FAIL,\r\n        PRODUCT_LIST_SUCCESS,\r\n        PRODUCT_DETAILS_FAIL,\r\n        PRODUCT_DETAILS_REQUEST,\r\n        PRODUCT_DETAILS_SUCCESS,\r\n        PRODUCT_CREATE_FAIL,\r\n        PRODUCT_CREATE_SUCCESS,\r\n        PRODUCT_CREATE_REQUEST,\r\n    } \r\n    from '../constants/productConstants'\r\n//A reducer(as a function) takes two thins: first initial state, and second, an action. \r\n//To use this reducer, first we add it to store.js\r\n//@functionality: for changing the state of the productList in homePage\r\nexport const productListReducer = (state = { products : []},action)=>{\r\n    //evaluating type with switch\r\n    //each case contains an action\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true , products : []}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading: false , products : action.payload}\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading: false , error : action.payload}\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const productDetailsReducer =  (state = { product : { reviews:[]}},action)=>{\r\n\r\n    switch(action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading: true , ...state}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading: false , product : action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading: false , error : action.payload}\r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CREATE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_CREATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload }\r\n      case PRODUCT_CREATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_CREATE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}