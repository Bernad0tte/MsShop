{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_FAIL, PRODUCT_LIST_SUCCESS } from '../constants/productConstants'; //After creating store and reducer, I've created this action. and after that, I'll fireoff this action in Homescreen component. \n//Do what useEffect did in Homescreen component, fetch data and map through it. \n\nimport axios from 'axios'; //the first action creator:\n\nexport const listProducts = () => async dispatch => {\n  //thunk allow us to use a function(dispatch) within a function\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const fetchProduct = () => {\n  try {\n    dispatch({\n      type: PRODUCT_FETCH_REQUEST\n    });\n\n    const fetchProduct = async () => {\n      const {\n        data\n      } = await axios.get(`/api/products/${match.params.id}`);\n      setPorduct(data);\n    };\n\n    fetchProduct();\n    dispatch({\n      type: PRODUCT_FETCH_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_FETCH_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/FullStack/mern-shop/client/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_FAIL","PRODUCT_LIST_SUCCESS","axios","listProducts","dispatch","type","data","get","payload","error","response","message","fetchProduct","PRODUCT_FETCH_REQUEST","match","params","id","setPorduct","PRODUCT_FETCH_SUCCESS","PRODUCT_FETCH_FAIL"],"mappings":"AAAA,SAASA,oBAAT,EAA8BC,iBAA9B,EAAgDC,oBAAhD,QAA2E,+BAA3E,C,CACA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAI,MAAMC,QAAN,IAAiB;AACjD;AACI,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAR;AAEA,UAAM;AAACO,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACK,GAAN,CAAU,eAAV,CAArB;AAEAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,oBADD;AAELO,MAAAA,OAAO,EAACF;AAFH,KAAD,CAAR;AAKH,GAVD,CAUC,OAAMG,KAAN,EAAY;AACTL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,iBADD;AAELQ,MAAAA,OAAO,EAACC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAApE,GAA8EF,KAAK,CAACE;AAFvF,KAAD,CAAR;AAKH;AACJ,CAnBM;AAqBP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,MAAG;AACCR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEQ;AAAP,KAAD,CAAR;;AAGA,UAAMD,YAAY,GAAG,YAAU;AAC3B,YAAM;AAACN,QAAAA;AAAD,UAAS,MAAMJ,KAAK,CAACK,GAAN,CAAW,iBAAgBO,KAAK,CAACC,MAAN,CAAaC,EAAG,EAA3C,CAArB;AACAC,MAAAA,UAAU,CAACX,IAAD,CAAV;AACH,KAHD;;AAKAM,IAAAA,YAAY;AAEZR,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEa,qBADD;AAELV,MAAAA,OAAO,EAACF;AAFH,KAAD,CAAR;AAKH,GAhBD,CAgBC,OAAMG,KAAN,EAAY;AACTL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEc,kBADD;AAELX,MAAAA,OAAO,EAACC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAApE,GAA8EF,KAAK,CAACE;AAFvF,KAAD,CAAR;AAKH;AAEJ,CAzBM","sourcesContent":["import { PRODUCT_LIST_REQUEST,PRODUCT_LIST_FAIL,PRODUCT_LIST_SUCCESS} from '../constants/productConstants'\r\n//After creating store and reducer, I've created this action. and after that, I'll fireoff this action in Homescreen component. \r\n//Do what useEffect did in Homescreen component, fetch data and map through it. \r\nimport axios from 'axios'\r\n\r\n//the first action creator:\r\nexport const listProducts = ()=>async(dispatch)=>{\r\n//thunk allow us to use a function(dispatch) within a function\r\n    try{\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get('/api/products')\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const fetchProduct = () => {\r\n    try{\r\n        dispatch({type: PRODUCT_FETCH_REQUEST})\r\n\r\n\r\n        const fetchProduct = async ()=>{\r\n            const {data} = await axios.get(`/api/products/${match.params.id}`)\r\n            setPorduct(data) \r\n        }\r\n        \r\n        fetchProduct()\r\n\r\n        dispatch({\r\n            type: PRODUCT_FETCH_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type: PRODUCT_FETCH_FAIL,\r\n            payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}