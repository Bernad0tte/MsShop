{"ast":null,"code":"//actions: objects that represent the intention to change the peice of state. \n//action creators: functions that dispatch(fire off) the action.\n//!example: action creator like getproducts(), in this action creator, we made a fetch request to backend to get data(via axios), and with payload, send it to reducer.\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants';\nimport axios from 'axios'; // export const addToCart = (id,qty) => async(dispatch,getState) => {\n//     const {data} = await axios.get(`/api/products/${id}`)\n//     dispatch({\n//         type:CART_ADD_ITEM,\n//         payload:{\n//             productID : data._id,\n//             name: data.name,\n//             image: data.image,\n//             price: data.price,\n//             countInStock : data.countInStock,\n//             qty\n//         }\n//     })\n//     localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems)) //Here we save them, We will get them in store.js\n// }\n// export const removeFromCart = (id) => async(dispatch,getState)=>{\n//     dispatch({\n//         type:CART_REMOVE_ITEM,\n//         payload:id\n//     })\n//     localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems)) \n// }\n// export const saveShippingAddress = (data) => async(dispatch)=>{\n//     dispatch({\n//         type:CART_SAVE_SHIPPING_ADDRESS,\n//         payload:data\n//     })\n//     localStorage.setItem('shippingAddress',JSON.stringify(data)) \n// }\n// export const savePaymentMethod = (data) => async(dispatch)=>{\n//     dispatch({\n//         type:CART_SAVE_PAYMENT_METHOD,\n//         payload:data \n//     })\n//     localStorage.setItem('paymentMethod',JSON.stringify(data)) \n// }\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const saveShippingAddress = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n};\nexport const savePaymentMethod = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/FullStack/mern-shop/client/src/actions/cartActions.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","axios","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,aAAT,EACSC,gBADT,EAESC,0BAFT,EAGSC,wBAHT,QAKa,4BALb;AAOA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMN,KAAK,CAACO,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAAvB;AAEAE,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEZ,aADC;AAEPa,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAEJ,IAAI,CAACK,GADP;AAEPC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAFJ;AAGPC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAHL;AAIPC,MAAAA,KAAK,EAAER,IAAI,CAACQ,KAJL;AAKPC,MAAAA,YAAY,EAAET,IAAI,CAACS,YALZ;AAMPZ,MAAAA;AANO;AAFF,GAAD,CAAR;AAYAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CAhBI;AAkBL,OAAO,MAAMC,cAAc,GAAIpB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC5DD,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEX,gBADC;AAEPY,IAAAA,OAAO,EAAEP;AAFF,GAAD,CAAR;AAKAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACD,CAPM;AASP,OAAO,MAAME,mBAAmB,GAAIjB,IAAD,IAAWF,QAAD,IAAc;AACzDA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAEV,0BADC;AAEPW,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;AAKAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAxC;AACD,CAPM;AASP,OAAO,MAAMkB,iBAAiB,GAAIlB,IAAD,IAAWF,QAAD,IAAc;AACvDA,EAAAA,QAAQ,CAAC;AACPI,IAAAA,IAAI,EAAET,wBADC;AAEPU,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;AAKAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAtC;AACD,CAPM","sourcesContent":["//actions: objects that represent the intention to change the peice of state. \r\n//action creators: functions that dispatch(fire off) the action.\r\n//!example: action creator like getproducts(), in this action creator, we made a fetch request to backend to get data(via axios), and with payload, send it to reducer.\r\nimport { CART_ADD_ITEM,\r\n         CART_REMOVE_ITEM,\r\n         CART_SAVE_SHIPPING_ADDRESS,\r\n         CART_SAVE_PAYMENT_METHOD,\r\n        } \r\n        from '../constants/cartConstants'\r\n        \r\nimport axios from 'axios'\r\n\r\n// export const addToCart = (id,qty) => async(dispatch,getState) => {\r\n//     const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n//     dispatch({\r\n//         type:CART_ADD_ITEM,\r\n//         payload:{\r\n//             productID : data._id,\r\n//             name: data.name,\r\n//             image: data.image,\r\n//             price: data.price,\r\n//             countInStock : data.countInStock,\r\n//             qty\r\n//         }\r\n//     })\r\n\r\n//     localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems)) //Here we save them, We will get them in store.js\r\n// }\r\n\r\n// export const removeFromCart = (id) => async(dispatch,getState)=>{\r\n//     dispatch({\r\n//         type:CART_REMOVE_ITEM,\r\n//         payload:id\r\n//     })\r\n//     localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems)) \r\n// }\r\n\r\n// export const saveShippingAddress = (data) => async(dispatch)=>{\r\n//     dispatch({\r\n//         type:CART_SAVE_SHIPPING_ADDRESS,\r\n//         payload:data\r\n//     })\r\n//     localStorage.setItem('shippingAddress',JSON.stringify(data)) \r\n// }\r\n\r\n// export const savePaymentMethod = (data) => async(dispatch)=>{\r\n//     dispatch({\r\n//         type:CART_SAVE_PAYMENT_METHOD,\r\n//         payload:data \r\n//     })\r\n//     localStorage.setItem('paymentMethod',JSON.stringify(data)) \r\n// }\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n  \r\n    dispatch({\r\n      type: CART_ADD_ITEM,\r\n      payload: {\r\n        product: data._id,\r\n        name: data.name,\r\n        image: data.image,\r\n        price: data.price,\r\n        countInStock: data.countInStock,\r\n        qty,\r\n      },\r\n    })\r\n  \r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n  }\r\n  \r\n  export const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n      type: CART_REMOVE_ITEM,\r\n      payload: id,\r\n    })\r\n  \r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n  }\r\n  \r\n  export const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n      type: CART_SAVE_SHIPPING_ADDRESS,\r\n      payload: data,\r\n    })\r\n  \r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n  }\r\n  \r\n  export const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n      type: CART_SAVE_PAYMENT_METHOD,\r\n      payload: data,\r\n    })\r\n  \r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n  }"]},"metadata":{},"sourceType":"module"}