{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Masoud/Desktop/ReactEx/FullStack/mern-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Masoud/Desktop/ReactEx/FullStack/mern-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";//CHECKED\n//The error after admin logout in userlistScreen should be check\nimport axios from'axios';import{ORDER_LIST_MY_RESET}from'../constants/orderConstants';//Avoid show user profile to other users by cleaning state after logout.\nimport{USER_DETAILS_FAIL,USER_DETAILS_REQUEST,USER_DETAILS_SUCCESS,USER_LOGIN_FAIL,USER_LOGIN_REQUEST,USER_LOGIN_SUCCESS,USER_LOGOUT,USER_REGISTER_FAIL,USER_REGISTER_REQUEST,USER_REGISTER_SUCCESS,USER_UPDATE_PROFILE_FAIL,USER_UPDATE_PROFILE_REQUEST,USER_UPDATE_PROFILE_SUCCESS,USER_LIST_FAIL,USER_LIST_SUCCESS,USER_LIST_REQUEST,USER_LIST_RESET,USER_DELETE_REQUEST,USER_DELETE_SUCCESS,USER_DELETE_FAIL,USER_UPDATE_FAIL,USER_UPDATE_SUCCESS,USER_UPDATE_REQUEST}from'../constants/userConstants';export var login=function login(email,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var config,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:USER_LOGIN_REQUEST});config={headers:{'Content-Type':'application/json'}};_context.next=5;return axios.post('/api/users/login',{email:email,password:password},config);case 5:_yield$axios$post=_context.sent;data=_yield$axios$post.data;dispatch({type:USER_LOGIN_SUCCESS,payload:data});localStorage.setItem('userInfo',JSON.stringify(data));_context.next=14;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);dispatch({type:USER_LOGIN_FAIL,payload:_context.t0.response&&_context.t0.response.data.message?_context.t0.response.data.message:_context.t0.message});case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var logout=function logout(){return function(dispatch){localStorage.removeItem('userInfo');localStorage.removeItem('cartItems');localStorage.removeItem('shippingAddress');localStorage.removeItem('paymentMethod');dispatch({type:USER_LOGOUT});dispatch({type:USER_LIST_RESET});dispatch({type:ORDER_LIST_MY_RESET});document.location.href='/login';};};export var register=function register(name,email,password){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var config,_yield$axios$post2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:USER_REGISTER_REQUEST});config={headers:{'Content-Type':'application/json'}};_context2.next=5;return axios.post('/api/users',{name:name,email:email,password:password},config);case 5:_yield$axios$post2=_context2.sent;data=_yield$axios$post2.data;dispatch({type:USER_REGISTER_SUCCESS,payload:data});dispatch({type:USER_LOGIN_SUCCESS,payload:data});localStorage.setItem('userInfo',JSON.stringify(data));_context2.next=15;break;case 12:_context2.prev=12;_context2.t0=_context2[\"catch\"](0);dispatch({type:USER_REGISTER_FAIL,payload:_context2.t0.response&&_context2.t0.response.data.message?_context2.t0.response.data.message:_context2.t0.message});case 15:case\"end\":return _context2.stop();}}},_callee2,null,[[0,12]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var getUserDetails=function getUserDetails(id){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var _getState,userInfo,config,_yield$axios$get,data,message;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;dispatch({type:USER_DETAILS_REQUEST});_getState=getState(),userInfo=_getState.userLogin.userInfo;config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};_context3.next=6;return axios.get(\"/api/users/\".concat(id),config);case 6:_yield$axios$get=_context3.sent;data=_yield$axios$get.data;dispatch({type:USER_DETAILS_SUCCESS,payload:data});_context3.next=16;break;case 11:_context3.prev=11;_context3.t0=_context3[\"catch\"](0);message=_context3.t0.response&&_context3.t0.response.data.message?_context3.t0.response.data.message:_context3.t0.message;if(message==='Not authorized, token failed'){dispatch(logout());}dispatch({type:USER_DETAILS_FAIL,payload:message});case 16:case\"end\":return _context3.stop();}}},_callee3,null,[[0,11]]);}));return function(_x3,_x4){return _ref3.apply(this,arguments);};}();};export var updateUserProfile=function updateUserProfile(user){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var _getState2,userInfo,config,_yield$axios$put,data,message;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;dispatch({type:USER_UPDATE_PROFILE_REQUEST});_getState2=getState(),userInfo=_getState2.userLogin.userInfo;config={headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(userInfo.token)}};_context4.next=6;return axios.put(\"/api/users/profile\",user,config);case 6:_yield$axios$put=_context4.sent;data=_yield$axios$put.data;dispatch({type:USER_UPDATE_PROFILE_SUCCESS,payload:data});dispatch({type:USER_LOGIN_SUCCESS,payload:data});localStorage.setItem('userInfo',JSON.stringify(data));_context4.next=18;break;case 13:_context4.prev=13;_context4.t0=_context4[\"catch\"](0);message=_context4.t0.response&&_context4.t0.response.data.message?_context4.t0.response.data.message:_context4.t0.message;if(message==='Not authorized, token failed'){dispatch(logout());}dispatch({type:USER_UPDATE_PROFILE_FAIL,payload:message});case 18:case\"end\":return _context4.stop();}}},_callee4,null,[[0,13]]);}));return function(_x5,_x6){return _ref4.apply(this,arguments);};}();};export var listUsers=function listUsers(){return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch,getState){var _getState3,userInfo,config,_yield$axios$get2,data,message;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;dispatch({type:USER_LIST_REQUEST});_getState3=getState(),userInfo=_getState3.userLogin.userInfo;config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};_context5.next=6;return axios.get(\"/api/users\",config);case 6:_yield$axios$get2=_context5.sent;data=_yield$axios$get2.data;dispatch({type:USER_LIST_SUCCESS,payload:data});_context5.next=16;break;case 11:_context5.prev=11;_context5.t0=_context5[\"catch\"](0);message=_context5.t0.response&&_context5.t0.response.data.message?_context5.t0.response.data.message:_context5.t0.message;if(message==='Not authorized, token failed'){dispatch(logout());}dispatch({type:USER_LIST_FAIL,payload:message});case 16:case\"end\":return _context5.stop();}}},_callee5,null,[[0,11]]);}));return function(_x7,_x8){return _ref5.apply(this,arguments);};}();};export var deleteUser=function deleteUser(id){return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch,getState){var _getState4,userInfo,config,message;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;dispatch({type:USER_DELETE_REQUEST});_getState4=getState(),userInfo=_getState4.userLogin.userInfo;config={headers:{Authorization:\"Bearer \".concat(userInfo.token)}};_context6.next=6;return axios.delete(\"/api/users/\".concat(id),config);case 6:dispatch({type:USER_DELETE_SUCCESS});_context6.next=14;break;case 9:_context6.prev=9;_context6.t0=_context6[\"catch\"](0);message=_context6.t0.response&&_context6.t0.response.data.message?_context6.t0.response.data.message:_context6.t0.message;if(message==='Not authorized, token failed'){dispatch(logout());}dispatch({type:USER_DELETE_FAIL,payload:message});case 14:case\"end\":return _context6.stop();}}},_callee6,null,[[0,9]]);}));return function(_x9,_x10){return _ref6.apply(this,arguments);};}();};export var updateUser=function updateUser(user){return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch,getState){var _getState5,userInfo,config,_yield$axios$put2,data,message;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.prev=0;dispatch({type:USER_UPDATE_REQUEST});_getState5=getState(),userInfo=_getState5.userLogin.userInfo;config={headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(userInfo.token)}};_context7.next=6;return axios.put(\"/api/users/\".concat(user._id),user,config);case 6:_yield$axios$put2=_context7.sent;data=_yield$axios$put2.data;dispatch({type:USER_UPDATE_SUCCESS});dispatch({type:USER_DETAILS_SUCCESS,payload:data});_context7.next=17;break;case 12:_context7.prev=12;_context7.t0=_context7[\"catch\"](0);message=_context7.t0.response&&_context7.t0.response.data.message?_context7.t0.response.data.message:_context7.t0.message;if(message==='Not authorized, token failed'){dispatch(logout());}dispatch({type:USER_UPDATE_FAIL,payload:message});case 17:case\"end\":return _context7.stop();}}},_callee7,null,[[0,12]]);}));return function(_x11,_x12){return _ref7.apply(this,arguments);};}();};// import {\n//     USER_LOGIN_REQUEST,\n//     USER_LOGIN_SUCCESS,\n//     USER_LOGIN_FAIL,\n//     USER_LOGOUT,\n//     USER_REGISTER_REQUEST,\n//     USER_REGISTER_SUCCESS,\n//     USER_REGISTER_FAIL,\n//     USER_DETAILS_SUCCESS,\n//     USER_DETAILS_REQUEST,\n//     USER_DETAILS_FAIL,\n//     USER_UPDATE_PROFILE_REQUEST,\n//     USER_UPDATE_PROFILE_SUCCESS,\n//     USER_UPDATE_PROFILE_FAIL,\n//     USER_UPDATE_PROFILE_RESET,\n//     USER_LIST_REQUEST,\n//     USER_LIST_SUCCESS,\n//     USER_LIST_FAIL,\n//     USER_LIST_RESET,\n//     USER_DELETE_FAIL,\n//     USER_DELETE_SUCCESS,\n//     USER_DELETE_REQUEST,\n//     USER_UPDATE_REQUEST,\n//     USER_UPDATE_SUCCESS,\n//     USER_UPDATE_FAIL,\n//     USER_UPDATE_RESET,\n// }from '../constants/userConstants'\n// import axios from 'axios'\n// export const login = (email,password) => async(dispatch)=>{\n//     try{\n//         dispatch({type: USER_LOGIN_REQUEST})\n//         const config = {\n//             headers:{\n//                 'Content_Type':'application/json'\n//             }    \n//         }\n//         const { data } = await axios.post(\n//             '/api/users/login',\n//             { email, password },\n//             config\n//           )\n//         dispatch({\n//             type: USER_LOGIN_SUCCESS,\n//             payload:data\n//         })\n//         localStorage.setItem('userInfo',JSON.stringify(data))\n//     }catch(error){\n//         dispatch({\n//             type: USER_LOGIN_FAIL,\n//             payload:error.response && error.response.data.message ? error.response.data.message : error.message\n//         })\n//     }\n// }\n// export const logout = () => async(dispatch)=>{\n//     localStorage.removeItem('userInfo')\n//     dispatch({type : USER_LOGOUT})\n//     dispatch({type: USER_LIST_RESET})\n// }\n// export const register = (name,email,password)=> async(dispatch) => {\n//     try{\n//         dispatch({type: USER_REGISTER_REQUEST})\n//         const config = {\n//             headers:{\n//                 'Content_Type':'application/json'\n//             }    \n//         }\n//         const { data } = await axios.post(\n//             '/api/users',\n//             { name,email, password },\n//             config\n//           )\n//         dispatch({\n//             type: USER_REGISTER_SUCCESS,\n//             payload:data\n//         })\n//         //Right after successfully registration, login user.\n//         dispatch({\n//             type: USER_LOGIN_SUCCESS,\n//             payload:data\n//         })\n//         localStorage.setItem('userInfo',JSON.stringify(data))\n//     }catch(error){\n//         dispatch({\n//             type: USER_REGISTER_FAIL,\n//             payload:error.response && error.response.data.message ? error.response.data.message : error.message\n//         })\n//     }\n// }\n// export const getUserDetails = (id) => async (dispatch, getState) => {\n//     //getState: has token.\n//     try {\n//       dispatch({\n//         type: USER_DETAILS_REQUEST,\n//       })\n//       const {userLogin: { userInfo },} = getState()\n//       const config = {\n//         headers: {\n//           Authorization: `Bearer ${userInfo.token}`,\n//         },\n//       }\n//       const { data } = await axios.get(`/api/users/${id}`, config)\n//       dispatch({\n//         type: USER_DETAILS_SUCCESS,\n//         payload: data,\n//       })\n//     } catch (error) {\n//       const message =\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message\n//       if (message === 'Not authorized, token failed') {\n//         dispatch(logout())\n//       }\n//       dispatch({\n//         type: USER_DETAILS_FAIL,\n//         payload: message,\n//       })\n//     }\n//   }\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\n//     //getState: has token.\n//     try {\n//       dispatch({\n//         type: USER_UPDATE_PROFILE_REQUEST,\n//       })\n//       const {userLogin: { userInfo },} = getState()\n//       const config = {\n//         headers: {\n//           'Content_Type':'application/json',\n//           Authorization: `Bearer ${userInfo.token}`,\n//         },\n//       }\n//       const { data } = await axios.put('/api/users/profile',user, config)\n//       dispatch({\n//         type: USER_UPDATE_PROFILE_SUCCESS,\n//         payload: data,\n//       })\n//     } catch (error) {\n//       const message =\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message\n//       if (message === 'Not authorized, token failed') {\n//         dispatch(logout())\n//       }\n//       dispatch({\n//         type: USER_UPDATE_PROFILE_FAIL,\n//         payload: message,\n//       })\n//     }\n//   }\n// //Protected for admin\n// export const listUsers = () => async (dispatch, getState) => {\n//   try {\n//     dispatch({\n//       type: USER_LIST_REQUEST,\n//     })\n//     const {\n//       userLogin: { userInfo },\n//     } = getState()\n//     const config = {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     }\n//     const { data } = await axios.get(`/api/users`, config)\n//     dispatch({\n//       type: USER_LIST_SUCCESS,\n//       payload: data,\n//     })\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message\n//     if (message === 'Not authorized, token failed') {\n//       dispatch(logout())\n//     }\n//     dispatch({\n//       type: USER_LIST_FAIL,\n//       payload: message,\n//     })\n//   }\n// }\n// export const deleteUser = (id) => async (dispatch, getState) => {\n//   try {\n//     dispatch({\n//       type: USER_DELETE_REQUEST,\n//     })\n//     const {\n//       userLogin: { userInfo },\n//     } = getState()\n//     const config = {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     }\n//     await axios.delete(`/api/users/${id}`, config)\n//     dispatch({\n//       type: USER_DELETE_SUCCESS \n//     })\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message\n//     if (message === 'Not authorized, token failed') {\n//       dispatch(logout())\n//     }\n//     dispatch({\n//       type: USER_DELETE_FAIL,\n//       payload: message,\n//     })\n//   }\n// }\n// export const updateUser = (user) => async (dispatch, getState) => {\n//   try {\n//     dispatch({\n//       type: USER_UPDATE_REQUEST,\n//     })\n//     const {\n//       userLogin: { userInfo },\n//     } = getState()\n//     const config = {\n//       headers: {\n//         'Content-Type': 'application/json',\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     }\n//     const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n//     dispatch({ type: USER_UPDATE_SUCCESS })\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message\n//     if (message === 'Not authorized, token failed') {\n//       dispatch(logout())\n//     }\n//     dispatch({\n//       type: USER_UPDATE_FAIL,\n//       payload: message,\n//     })\n//   }\n// }","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/ReactEx/FullStack/mern-shop/client/src/actions/userActions.js"],"names":["axios","ORDER_LIST_MY_RESET","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_LIST_FAIL","USER_LIST_SUCCESS","USER_LIST_REQUEST","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_REQUEST","login","email","password","dispatch","type","config","headers","post","data","payload","localStorage","setItem","JSON","stringify","response","message","logout","removeItem","document","location","href","register","name","getUserDetails","id","getState","userInfo","userLogin","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id"],"mappings":"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":["//CHECKED\r\n//The error after admin logout in userlistScreen should be check\r\n\r\nimport axios from 'axios'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants' //Avoid show user profile to other users by cleaning state after logout.\r\nimport {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('cartItems')\r\n  localStorage.removeItem('shippingAddress')\r\n  localStorage.removeItem('paymentMethod')\r\n  dispatch({ type: USER_LOGOUT })\r\n  dispatch({ type: USER_LIST_RESET })\r\n  dispatch({type: ORDER_LIST_MY_RESET})\r\n  document.location.href = '/login'\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\n// import {\r\n//     USER_LOGIN_REQUEST,\r\n//     USER_LOGIN_SUCCESS,\r\n//     USER_LOGIN_FAIL,\r\n//     USER_LOGOUT,\r\n//     USER_REGISTER_REQUEST,\r\n//     USER_REGISTER_SUCCESS,\r\n//     USER_REGISTER_FAIL,\r\n//     USER_DETAILS_SUCCESS,\r\n//     USER_DETAILS_REQUEST,\r\n//     USER_DETAILS_FAIL,\r\n//     USER_UPDATE_PROFILE_REQUEST,\r\n//     USER_UPDATE_PROFILE_SUCCESS,\r\n//     USER_UPDATE_PROFILE_FAIL,\r\n//     USER_UPDATE_PROFILE_RESET,\r\n//     USER_LIST_REQUEST,\r\n//     USER_LIST_SUCCESS,\r\n//     USER_LIST_FAIL,\r\n//     USER_LIST_RESET,\r\n//     USER_DELETE_FAIL,\r\n//     USER_DELETE_SUCCESS,\r\n//     USER_DELETE_REQUEST,\r\n//     USER_UPDATE_REQUEST,\r\n//     USER_UPDATE_SUCCESS,\r\n//     USER_UPDATE_FAIL,\r\n//     USER_UPDATE_RESET,\r\n\r\n\r\n// }from '../constants/userConstants'\r\n// import axios from 'axios'\r\n\r\n// export const login = (email,password) => async(dispatch)=>{\r\n//     try{\r\n//         dispatch({type: USER_LOGIN_REQUEST})\r\n\r\n//         const config = {\r\n//             headers:{\r\n//                 'Content_Type':'application/json'\r\n//             }    \r\n//         }\r\n        \r\n//         const { data } = await axios.post(\r\n//             '/api/users/login',\r\n//             { email, password },\r\n//             config\r\n//           )\r\n    \r\n//         dispatch({\r\n//             type: USER_LOGIN_SUCCESS,\r\n//             payload:data\r\n//         })\r\n\r\n//         localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n//     }catch(error){\r\n        \r\n//         dispatch({\r\n//             type: USER_LOGIN_FAIL,\r\n//             payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n//         })\r\n//     }\r\n\r\n// }\r\n\r\n// export const logout = () => async(dispatch)=>{\r\n//     localStorage.removeItem('userInfo')\r\n//     dispatch({type : USER_LOGOUT})\r\n//     dispatch({type: USER_LIST_RESET})\r\n// }\r\n\r\n\r\n\r\n// export const register = (name,email,password)=> async(dispatch) => {\r\n//     try{\r\n//         dispatch({type: USER_REGISTER_REQUEST})\r\n\r\n//         const config = {\r\n//             headers:{\r\n//                 'Content_Type':'application/json'\r\n//             }    \r\n//         }\r\n        \r\n//         const { data } = await axios.post(\r\n//             '/api/users',\r\n//             { name,email, password },\r\n//             config\r\n//           )\r\n    \r\n//         dispatch({\r\n//             type: USER_REGISTER_SUCCESS,\r\n//             payload:data\r\n//         })\r\n\r\n//         //Right after successfully registration, login user.\r\n//         dispatch({\r\n//             type: USER_LOGIN_SUCCESS,\r\n//             payload:data\r\n//         })\r\n\r\n//         localStorage.setItem('userInfo',JSON.stringify(data))\r\n\r\n//     }catch(error){\r\n        \r\n//         dispatch({\r\n//             type: USER_REGISTER_FAIL,\r\n//             payload:error.response && error.response.data.message ? error.response.data.message : error.message\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n// export const getUserDetails = (id) => async (dispatch, getState) => {\r\n//     //getState: has token.\r\n//     try {\r\n//       dispatch({\r\n//         type: USER_DETAILS_REQUEST,\r\n//       })\r\n  \r\n//       const {userLogin: { userInfo },} = getState()\r\n  \r\n//       const config = {\r\n//         headers: {\r\n//           Authorization: `Bearer ${userInfo.token}`,\r\n//         },\r\n//       }\r\n  \r\n//       const { data } = await axios.get(`/api/users/${id}`, config)\r\n  \r\n//       dispatch({\r\n//         type: USER_DETAILS_SUCCESS,\r\n//         payload: data,\r\n//       })\r\n//     } catch (error) {\r\n//       const message =\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message\r\n//       if (message === 'Not authorized, token failed') {\r\n//         dispatch(logout())\r\n//       }\r\n//       dispatch({\r\n//         type: USER_DETAILS_FAIL,\r\n//         payload: message,\r\n//       })\r\n//     }\r\n//   }\r\n\r\n// export const updateUserProfile = (user) => async (dispatch, getState) => {\r\n//     //getState: has token.\r\n//     try {\r\n//       dispatch({\r\n//         type: USER_UPDATE_PROFILE_REQUEST,\r\n//       })\r\n  \r\n//       const {userLogin: { userInfo },} = getState()\r\n  \r\n//       const config = {\r\n//         headers: {\r\n//           'Content_Type':'application/json',\r\n//           Authorization: `Bearer ${userInfo.token}`,\r\n//         },\r\n//       }\r\n  \r\n//       const { data } = await axios.put('/api/users/profile',user, config)\r\n  \r\n//       dispatch({\r\n//         type: USER_UPDATE_PROFILE_SUCCESS,\r\n//         payload: data,\r\n//       })\r\n//     } catch (error) {\r\n//       const message =\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message\r\n//       if (message === 'Not authorized, token failed') {\r\n//         dispatch(logout())\r\n//       }\r\n//       dispatch({\r\n//         type: USER_UPDATE_PROFILE_FAIL,\r\n//         payload: message,\r\n//       })\r\n//     }\r\n//   }\r\n\r\n// //Protected for admin\r\n// export const listUsers = () => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: USER_LIST_REQUEST,\r\n//     })\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState()\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     }\r\n\r\n//     const { data } = await axios.get(`/api/users`, config)\r\n\r\n//     dispatch({\r\n//       type: USER_LIST_SUCCESS,\r\n//       payload: data,\r\n//     })\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message\r\n//     if (message === 'Not authorized, token failed') {\r\n//       dispatch(logout())\r\n//     }\r\n//     dispatch({\r\n//       type: USER_LIST_FAIL,\r\n//       payload: message,\r\n//     })\r\n//   }\r\n// }\r\n\r\n// export const deleteUser = (id) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: USER_DELETE_REQUEST,\r\n//     })\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState()\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     }\r\n\r\n//     await axios.delete(`/api/users/${id}`, config)\r\n\r\n//     dispatch({\r\n//       type: USER_DELETE_SUCCESS \r\n//     })\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message\r\n//     if (message === 'Not authorized, token failed') {\r\n//       dispatch(logout())\r\n//     }\r\n//     dispatch({\r\n//       type: USER_DELETE_FAIL,\r\n//       payload: message,\r\n//     })\r\n//   }\r\n// }\r\n\r\n\r\n// export const updateUser = (user) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({\r\n//       type: USER_UPDATE_REQUEST,\r\n//     })\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState()\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     }\r\n\r\n//     const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n//     dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n//     dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n    \r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message\r\n//     if (message === 'Not authorized, token failed') {\r\n//       dispatch(logout())\r\n//     }\r\n//     dispatch({\r\n//       type: USER_UPDATE_FAIL,\r\n//       payload: message,\r\n//     })\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}