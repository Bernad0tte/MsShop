{"ast":null,"code":"//1st file I created to work with redux.\n//Here, I connect all reducers and middlewares , ... \nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productDetailsReducer, productListReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []; //When Store loads, we can load thing. That thing can be in initial State!\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/FullStack/mern-shop/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productDetailsReducer","productListReducer","cartReducer","reducer","productList","productDetails","cart","cartItemsFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","middleware","store"],"mappings":"AAAA;AACA;AAEA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AAEA,SAAQC,qBAAR,EAA+BC,kBAA/B,QAAwD,4BAAxD;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,WAAW,EAAGH,kBADc;AAE5BI,EAAAA,cAAc,EAAEL,qBAFY;AAG5BM,EAAAA,IAAI,EAAGJ;AAHqB,CAAD,CAA/B;AAOA,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACEC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADF,GAEE,EAF/B,C,CAIA;;AACA,MAAMG,YAAY,GAAG;AACjBN,EAAAA,IAAI,EAAG;AAAEO,IAAAA,SAAS,EAAGN;AAAd;AADU,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAChB,KAAD,CAAnB;AAEA,MAAMiB,KAAK,GAAGpB,WAAW,CAACQ,OAAD,EAAUS,YAAV,EAAyBb,mBAAmB,CAACF,eAAe,CAAC,GAAGiB,UAAJ,CAAhB,CAA5C,CAAzB;AAEA,eAAeC,KAAf","sourcesContent":["//1st file I created to work with redux.\r\n//Here, I connect all reducers and middlewares , ... \r\n\r\nimport  {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\n\r\nimport {productDetailsReducer, productListReducer} from './reducers/productReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart : cartReducer,\r\n\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n                             ? JSON.parse(localStorage.getItem('cartItems')) \r\n                             : []\r\n\r\n//When Store loads, we can load thing. That thing can be in initial State!\r\nconst initialState = {\r\n    cart : { cartItems : cartItemsFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState , composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n"]},"metadata":{},"sourceType":"module"}