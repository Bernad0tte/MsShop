{"ast":null,"code":"//actions: objects that represent the intention to change the peice of state. \n//action creators: functions that dispatch(fire off) the action.\n//!example: action creator like getproducts(), in this action creator, we made a fetch request to backend to get data(via axios), and with payload, send it to reducer.\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../constants/cartConstants';\nimport axios from 'axios';\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      productID: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems)); //Here we save them, We will get them in store.js\n};\nexport const removeFromCart = id => async (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/FullStack/mern-shop/client/src/actions/cartActions.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","axios","addToCart","id","qty","dispatch","getState","data","get","type","payload","productID","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart"],"mappings":"AAAA;AACA;AACA;AACA,SAAQA,aAAR,EAAuBC,gBAAvB,QAA8C,4BAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAIC,GAAJ,KAAY,OAAMC,QAAN,EAAeC,QAAf,KAA4B;AAC7D,QAAM;AAACC,IAAAA;AAAD,MAAS,MAAMN,KAAK,CAACO,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAArB;AAEAE,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAACV,aADA;AAELW,IAAAA,OAAO,EAAC;AACJC,MAAAA,SAAS,EAAGJ,IAAI,CAACK,GADb;AAEJC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAFP;AAGJC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAHR;AAIJC,MAAAA,KAAK,EAAER,IAAI,CAACQ,KAJR;AAKJC,MAAAA,YAAY,EAAGT,IAAI,CAACS,YALhB;AAMJZ,MAAAA;AANI;AAFH,GAAD,CAAR;AAYAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAjC,EAf6D,CAee;AAC/E,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAIpB,EAAD,IAAQ,OAAME,QAAN,EAAeC,QAAf,KAA0B;AAC5DD,EAAAA,QAAQ,CAAC;AACLI,IAAAA,IAAI,EAACT,gBADA;AAELU,IAAAA,OAAO,EAACP;AAFH,GAAD,CAAR;AAIAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAjC;AACH,CANM","sourcesContent":["//actions: objects that represent the intention to change the peice of state. \r\n//action creators: functions that dispatch(fire off) the action.\r\n//!example: action creator like getproducts(), in this action creator, we made a fetch request to backend to get data(via axios), and with payload, send it to reducer.\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM} from '../constants/cartConstants'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id,qty) => async(dispatch,getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type:CART_ADD_ITEM,\r\n        payload:{\r\n            productID : data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock : data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems)) //Here we save them, We will get them in store.js\r\n}\r\n\r\nexport const removeFromCart = (id) => async(dispatch,getState)=>{\r\n    dispatch({\r\n        type:CART_REMOVE_ITEM,\r\n        payload:id\r\n    })\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}"]},"metadata":{},"sourceType":"module"}