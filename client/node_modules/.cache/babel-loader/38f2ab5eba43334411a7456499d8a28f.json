{"ast":null,"code":"import _slicedToArray from\"C:/Users/Masoud/Desktop/ReactEx/FullStack/mern-shop/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//CHECKED\nimport React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{savePaymentMethod}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentPage=function PaymentPage(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;//User shouldn't be here if he didn't fill the shipping.\nif(!shippingAddress.address){history.push('/shipping');}var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"PayPal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default PaymentPage;","map":{"version":3,"sources":["C:/Users/Masoud/Desktop/ReactEx/FullStack/mern-shop/client/src/pages/PaymentPage.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentPage","history","cart","state","shippingAddress","address","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"iLAAA;AACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAwBC,GAAxB,KAAmC,iBAAnC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAAQC,iBAAR,KAAgC,wBAAhC,C,wFAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAe,IAAbC,CAAAA,OAAa,MAAbA,OAAa,CAC/B,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CACA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CACF;AACE,GAAI,CAACA,eAAe,CAACC,OAArB,CAA8B,CAC5BJ,OAAO,CAACK,IAAR,CAAa,WAAb,EACD,CAED,cAA0Cf,QAAQ,CAAC,QAAD,CAAlD,wCAAOgB,aAAP,eAAsBC,gBAAtB,eAEA,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEA,GAAMe,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GACAH,QAAQ,CAACV,iBAAiB,CAACQ,aAAD,CAAlB,CAAR,CACAN,OAAO,CAACK,IAAR,CAAa,aAAb,EACD,CAJD,CAMA,mBACE,MAAC,aAAD,yBAEE,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EAFF,cAGE,sCAHF,cAIE,MAAC,IAAD,EAAM,QAAQ,CAAEI,aAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,yBACE,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADF,cAEE,KAAC,GAAD,wBACE,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAC,uBAFR,CAGE,EAAE,CAAC,QAHL,CAIE,IAAI,CAAC,eAJP,CAKE,KAAK,CAAC,QALR,CAME,OAAO,KANT,CAOE,QAAQ,CAAE,kBAACC,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EAPZ,EADF,EAFF,GADF,cAwBE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBAxBF,GAJF,GADF,CAoCH,CAtDD,CAwDA,cAAed,CAAAA,WAAf","sourcesContent":["//CHECKED\r\nimport React, { useState } from 'react'\r\nimport { Form, Button , Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {savePaymentMethod} from '../actions/cartActions'\r\n\r\nconst PaymentPage = ({history}) => {\r\n    const cart = useSelector((state) => state.cart)\r\n    const { shippingAddress } = cart\r\n  //User shouldn't be here if he didn't fill the shipping.\r\n    if (!shippingAddress.address) {\r\n      history.push('/shipping')\r\n    }\r\n  \r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n  \r\n    const dispatch = useDispatch()\r\n  \r\n    const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      dispatch(savePaymentMethod(paymentMethod))\r\n      history.push('/placeorder')\r\n    }\r\n  \r\n    return (\r\n      <FormContainer>\r\n        {/* step 1 and step 2 are not disabled, because they're done or in process */}\r\n        <CheckoutSteps step1 step2 step3 />\r\n        <h1>Payment Method</h1>\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group>\r\n            <Form.Label as='legend'>Select Method</Form.Label>\r\n            <Col>\r\n              <Form.Check\r\n                type='radio'\r\n                label='PayPal or Credit Card'\r\n                id='PayPal'\r\n                name='paymentMethod'\r\n                value='PayPal'\r\n                checked\r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n              ></Form.Check>\r\n              {/* <Form.Check\r\n                type='radio'\r\n                label='Stripe'\r\n                id='Stripe'\r\n                name='paymentMethod'\r\n                value='Stripe'\r\n                onChange={(e) => setPaymentMethod(e.target.value)}\r\n              ></Form.Check> */}\r\n            </Col>\r\n          </Form.Group>\r\n  \r\n          <Button type='submit' variant='primary'>\r\n            Continue\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    )\r\n\r\n}\r\n\r\nexport default PaymentPage\r\n"]},"metadata":{},"sourceType":"module"}